{% set name = "pytorch" %}
{% set version = "FORMAT_PYTORCH_VERSION" %}

package:
  name: "{{ name|lower }}"
  version: "{{ version }}"

source:
  url: http://192.168.2.225:8080/pytorch-v1.11.0.tar.gz
  md5: 9ad09cd52e469b31d468cfbd010b55f4
  sha1: 941f4cb5a6ff6cff5c6b91ab741f5a6819dc0656
  sha256: dc0c2b8d13c112a2b9ea8757a475b0ce2ca97cd19c50a8b70b8c286676616f1d

build:
  number: '0'
  string: pyFORMAT_PYTHON_VERSION_cpu_0
requirements:
  build:
    - bzip2
    - ca-certificates
    - cmake
    - ncurses
    - openssl
    - xz
    - zlib
    - zstd
  host:
  # https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#host
  # It represents packages that need to be specific to the target platform when the target platform is not necessarily the same as the native build platform
    - bzip2
    - ca-certificates
    - cmake
    - cffi
    - future
    - ncurses
    - requests
    - six
    - tzdata
    - xz
    - zlib
    - zstd
    - python FORMAT_PYTHON_VERSION
    - pip
    - setuptools
    - wheel
    - pyyaml
    - typing_extensions
    - dataclasses # [py36]
    - ninja
    - libuv # [unix]
    - pkg-config # [unix]
{{ environ.get('NUMPY_PACKAGE', '    - numpy 1.19') }}
{{ environ.get('OPENSSL_PACKAGE', '    - openssl') }}
  run:
    - python FORMAT_PYTHON_RANGE
    - dataclasses # [py36]
    # - pytorch-mutex 1.0 cpu
    - typing_extensions

test:
  imports:
    - torch

about:
  home: http://pytorch.org/
  license: BSD 3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: PyTorch is an optimized tensor library for deep learning using GPUs and CPUs.

extra:
  final: true
